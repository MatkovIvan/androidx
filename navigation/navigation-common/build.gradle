/*
 * Copyright (C) 2016 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * This file was created using the `create_project.py` script located in the
 * `<AndroidX root>/development/project-creator` directory.
 *
 * Please use that script when creating a new project, rather than copying an existing project and
 * modifying its settings.
 */


import androidx.build.KotlinTarget
import androidx.build.PlatformIdentifier
import androidx.build.Publish
import org.jetbrains.kotlin.gradle.plugin.KotlinPlatformType

plugins {
    id("AndroidXPlugin")
    id("com.android.library")
    alias(libs.plugins.kotlinSerialization)
}

androidXMultiplatform {
    android()

    defaultPlatform(PlatformIdentifier.ANDROID)

    sourceSets {
        commonMain {
            dependencies {
                api project(":annotation:annotation")
                api project(":collection:collection")
                api project(":lifecycle:lifecycle-common")
                api project(":lifecycle:lifecycle-runtime")
                api project(":lifecycle:lifecycle-viewmodel")
                api project(":savedstate:savedstate")
                api project(":lifecycle:lifecycle-viewmodel-savedstate")

                api(libs.kotlinStdlib)
                implementation(libs.kotlinSerializationCore)
            }
        }

        commonTest {
            dependencies {
                implementation(libs.kotlinStdlib)
                implementation(libs.kotlinCoroutinesTest)
                implementation(libs.kotlinTest)
            }
        }

        androidMain {
            dependsOn(commonMain)
            dependencies {
                implementation("androidx.core:core-ktx:1.1.0")
                implementation("androidx.profileinstaller:profileinstaller:1.3.0")
            }
        }

        androidUnitTest {
            dependsOn(commonTest)
            dependencies {
                implementation(project(":navigation:navigation-testing"))
                implementation("androidx.arch.core:core-testing:2.2.0")
                implementation(libs.junit)
                implementation(libs.mockitoCore4)
                implementation(libs.truth)
            }
        }

        androidInstrumentedTest {
            dependsOn(commonTest)
            dependencies {
                implementation(libs.kotlinTestJunit)
                implementation(libs.testExtJunit)
                implementation(libs.testCore)
                implementation(libs.testRunner)
                implementation(libs.espressoCore)
                implementation(libs.truth)
                implementation(libs.multidex)

                // CustomMessageMissingMethodException: Could not find method implementation() for arguments
                // implementation(libs.mockitoCore, excludes.bytebuddy)
                // implementation(libs.dexmakerMockito, excludes.bytebuddy)
                implementation("org.mockito:mockito-core:2.25.0", excludes.bytebuddy)
                implementation("com.linkedin.dexmaker:dexmaker-mockito:2.28.3", excludes.bytebuddy)
            }
        }
    }
}

android {
    buildTypes.all {
        consumerProguardFiles "proguard-rules.pro"
    }
    defaultConfig {
        multiDexEnabled true
    }
    namespace "androidx.navigation.common"
}

dependencies {
    lintPublish(project(':navigation:navigation-common-lint'))
}

androidx {
    name = "Navigation Common"
    publish = Publish.SNAPSHOT_AND_RELEASE
    inceptionYear = "2017"
    description = "Android Navigation-Common"
    metalavaK2UastEnabled = true
}
