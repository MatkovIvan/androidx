/**
 * This file was created using the `create_project.py` script located in the
 * `<AndroidX root>/development/project-creator` directory.
 *
 * Please use that script when creating a new project, rather than copying an existing project and
 * modifying its settings.
 */

import androidx.build.KmpPlatformsKt
import androidx.build.PlatformIdentifier
import androidx.build.Publish
import org.jetbrains.kotlin.gradle.plugin.KotlinPlatformType

plugins {
    id("AndroidXPlugin")
    id("com.android.library")
}

def macEnabled = KmpPlatformsKt.enableMac(project)
def linuxEnabled = KmpPlatformsKt.enableLinux(project)
def jsEnabled = KmpPlatformsKt.enableJs(project)
def wasmEnabled = KmpPlatformsKt.enableWasm(project)

androidXMultiplatform {
    android()
    desktop()
    mac()
    linux()
    ios()

    defaultPlatform(PlatformIdentifier.ANDROID)
}

kotlin {
    js {
        browser()
    }
    wasmJs()

    sourceSets {
        commonMain {
            dependencies {
                api(libs.kotlinStdlib)
                api(project(":lifecycle:lifecycle-common"))
                api(project(":annotation:annotation"))
            }
        }
        jvmMain {
            dependsOn(commonMain)

            dependencies {
                api("androidx.arch.core:core-common:2.2.0")
            }
        }

        desktopMain.dependsOn(jvmMain)
        androidMain.dependsOn(jvmMain)

        androidInstrumentedTest {
            dependencies {
                implementation(projectOrArtifact(":lifecycle:lifecycle-runtime"))
                implementation(libs.testExtJunit)
                implementation(libs.testCore)
                implementation(libs.testRunner)
                implementation(libs.testRules)
                implementation(libs.truth)
            }
        }

        jbMain.dependsOn(commonMain)
        desktopMain.dependsOn(jbMain)

        if (macEnabled || linuxEnabled || jsEnabled || wasmEnabled) {
            nonJvmMain.dependsOn(jbMain)
        }
        if (macEnabled || linuxEnabled) {
            nativeMain.dependsOn(nonJvmMain)
        }
        if (jsEnabled || wasmEnabled) {
            webMain.dependsOn(nonJvmMain)
        }

        targets.all { target ->
            if (target.platformType == KotlinPlatformType.native) {
                target.compilations["main"].defaultSourceSet {
                    dependsOn(nativeMain)
                }
            } else if (target.platformType in [
                    KotlinPlatformType.js,
                    KotlinPlatformType.wasm
            ]) {
                target.compilations["main"].defaultSourceSet {
                    dependsOn(webMain)
                }
            }
        }
    }
}

android {
    buildTypes.all {
        consumerProguardFiles("proguard-rules.pro")
    }
    namespace "androidx.savedstate"
}

androidx {
    name = "Saved State"
    publish = Publish.SNAPSHOT_AND_RELEASE
    inceptionYear = "2018"
    description = "Android Lifecycle Saved State"
    metalavaK2UastEnabled = true
}
